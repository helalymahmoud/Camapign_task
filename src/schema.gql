# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Message {
  id: String!
  senderId: String!
  receiverId: String!
  content: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: String!
  name: String!
  email: String!
  joinedCampaigns: [Campaign!]!
  sentMessages: [Message!]
  receivedMessages: [Message!]
}

type Partner {
  id: String!
  name: String!
  contactInfo: String!
  campaigns: [String!]!
}

type Ad {
  id: String!
  campaigned: String!
  title: String!
  content: String!
  type: String!
  status: String!
}

type Campaign {
  id: String!
  name: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  status: String!
  ads: [Ad!]!
  partners: [Partner!]!
  users: [User!]!
}

type NotificationToken {
  id: Float!
}

type RoleDistribution {
  role: String!
  count: Int!
}

type Ticket {
  user: String!
  campaign: String!
  createdAt: DateTime!
  expirationDate: DateTime!
  status: String!
}

type StripeCustomerType {
  id: String!
  email: String!
  name: String!
}

type RefundType {
  id: String
  amount: Float
  status: String
  currency: String
}

type PaymentIntentType {
  id: String!
  amount: Float!
  currency: String!
  status: String!
  client_secret: String
}

type ProductType {
  id: String!
  name: String!
  description: String
  price: Float!
  currency: String!
  isActive: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CouponType {
  id: ID!
  duration: String
  percent_off: Float
}

type PromoCodeType {
  id: ID!
  code: String!
  coupon: CouponType!
  created: Float!
}

type SalesSummaryType {
  totalRevenue: Float!
  totalTransactions: Float!
}

type TransactionType {
  id: String!
  status: String!
  amount: Int!
  amount_received: Int!
  currency: String!
  created: String!
  description: String
  customer: String
  receipt_url: String
}

type ReviewType {
  id: Int!
  rating: Int!
  comment: String
  createdAt: DateTime!
}

type Query {
  searchCampaignsUsingFind(searchKey: String!): [Campaign!]!
  searchCampaignsUsingQueryBuilder(searchKey: String!): [Campaign!]!
  search(input: SearchInput!): [SearchResultUnion!]!
  Campaigns: [Campaign!]!
  Campaign(id: String!): Campaign!
  Ads: [Ad!]!
  Ad(id: String!): Ad!
  Users: [User!]!
  User(id: String!): User!
  getUserRole: [RoleDistribution!]!
  getUserById(id: Float!): User
  getUsersByIds(ids: [Float!]!): [User!]!
  Partners: [Partner!]!
  Partner(id: String!): Partner!
  Tickets: [Ticket!]!
  Ticket(id: String!): Ticket!
  products(userId: String!): [ProductType!]!
  getCoupons: [CouponType!]!
  getTotalSales(startDate: String!, endDate: String!): SalesSummaryType!
  getAllTransactions(limit: Int, startingAfter: String): [TransactionType!]!
  getAllReviews: [ReviewType!]!
  getUserReviews(userId: String!): [ReviewType!]!
}

union SearchResultUnion = Campaign | Ad

input SearchInput {
  name: String
  description: String
  status: String
  startDate: String
  endDate: String
  title: String
}

type Mutation {
  """Register a new user"""
  register(data: RegisterDto!): String!

  """Verify email with OTP"""
  verifyOtp(email: String!, otp: String!): Boolean!

  """Login and return JWT token"""
  login(data: LoginDto!): String!

  """Send reset password link"""
  sendResetPasswordLink(email: String!): String!

  """Reset password using token"""
  resetPassword(token: String!, newPassword: String!): String!
  createCampaign(createCampaignInput: CreateCampaignInput!): Campaign!
  updateCampaign(id: String!, updateCampaignInput: CreateCampaignInput!): Campaign!
  removeCampaign(id: String!): Boolean!
  CreateAd(createAdInput: CreateAdInput!): Ad!
  UpdateAd(id: String!, updateAdInput: CreateAdInput!): Ad!
  removeAd(id: String!): Boolean!
  createUser(name: String!, email: String!, password: String!): User!
  updateUser(id: String!, updateUserDto: UpdateUserDto!): User!
  updatePassword(userId: String!, newPassword: String!): Boolean!
  removeUser(id: String!): Boolean!
  enablePush(id: String!, notificationDto: NotificationDto!): String!
  disablePush(id: String!, updateNotificationDto: UpdateNotificationDto!): String!
  sendNotification(token: String!, title: String!, body: String!): String!
  subscribeToTopic(tokens: [String!]!, topic: String!): String!
  unsubscribeFromTopic(tokens: [String!]!, topic: String!): String!
  createPartner(createPartnerInput: CreatePartnerInput!): Partner!
  updatePartner(id: String!, updatePartnerInput: CreatePartnerInput!): Partner!
  removePartner(id: String!): Boolean!
  createTicket(createTicketInput: CreateTicketInput!): Ticket!
  updateTicket(id: String!, updateTicketInput: CreateTicketInput!): Ticket!
  removeTicket(id: String!): Boolean!
  createCheckoutSession(priceId: String, customPrice: CustomPriceInput, mode: String! = "payment"): String!
  createInvoice(customerId: String!, items: [CustomPriceInput!]!): String!
  createCustomer(email: String!, name: String!): StripeCustomerType!
  refundPayment(paymentIntentId: String!): RefundType!
  createPaymentIntent(amount: Float!, currency: String!, customerId: String!): PaymentIntentType!
  createProduct(input: CreateProductInput!): ProductType!
  createCoupon(percentOff: Float!, duration: String!, expiresInDays: Float!): CouponType!
  deleteCoupon(couponId: String!): Boolean!
  createPromoCode(couponId: String!): PromoCodeType!
  addReview(userId: String!, reviewData: CreateReviewDto!): ReviewType!
  deleteReview(id: Int!): Boolean!
  sendMessage(senderId: String!, receiverId: String!, content: String!): Message!
}

input RegisterDto {
  name: String!
  email: String!
  password: String!
}

input LoginDto {
  email: String!
  password: String!
}

input CreateCampaignInput {
  name: String!
  description: String!
  startDate: DateTime!
  endDate: DateTime!
  status: String!
}

input CreateAdInput {
  title: String!
  content: String!
  type: String!
  status: String!
  campaignId: String!
}

input UpdateUserDto {
  l: String!
}

input NotificationDto {
  title: String!
  body: String!
  deviceToken: String!
}

input UpdateNotificationDto {
  deviceToken: String!
  reason: String
}

input CreatePartnerInput {
  name: String!
  contactInfo: String!
  campaignIds: [String!]!
}

input CreateTicketInput {
  userId: String!
  campaignId: String!
  expirationDate: String!
}

input CustomPriceInput {
  amount: Float!
  currency: String!
  name: String!
}

input CreateProductInput {
  name: String!
  description: String
  price: Float!
  currency: String! = "usd"
}

input CreateReviewDto {
  rating: Int!
  comment: String
}

type Subscription {
  userCreated: User!
  messageSent(receiverId: String!): Message!
}